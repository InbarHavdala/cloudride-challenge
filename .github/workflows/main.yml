name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-1
  ECR_REGISTRY: 753392824297.dkr.ecr.eu-west-1.amazonaws.com
  ECR_REPOSITORY: hello-world-repo

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          IMAGE_TAG: "Image"
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Write image definitions file
        run: printf '[{"name":"hello-world-container","imageUri":"%s:Image"}]' $ECR_REGISTRY/$ECR_REPOSITORY > imagedefinitions.json

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: imagedefinitions
          path: imagedefinitions.json

  terraform-deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./

    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.6

      - name: Terraform Formate
        id: fmt
        run: terraform fmt

      - name: Terraform Initialize
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan
 
      - name: Terraform Apply
        run: terraform apply
